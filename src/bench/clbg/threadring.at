/*
  thread-ring: Repeatedly switch from thread to thread passing one token.

  This benchmark is based on the Computer Language Benchmarks Game.
  http://benchmarksgame.alioth.debian.org/
*/

if: system.argv.length == 0 then: {
  system.println("Usage: threadring.at <num-passes> [num-threads]"); 
};

def numPasses  := 50000000;
def numThreads := 503;

if: system.argv.length >= 1 then: {
  numPasses := system.argv[1].parseNumeric();
  
  if: system.argv.length >= 2 then: {
    numThreads := system.argv[2].parseNumeric();
  }
};

def createRing(numActors) {
  def prev  := nil;
  def first := nil;
  
  numActors.doTimes: { | i |
    def act := actor: {
      def nextActor;
      
      def signalEndOfBenchmark() {
  		jlobby.bench.clbg.ThreadRingAT.sendSignal()
	  };
      
      def next(cnt) {
         // system.println(i);system.println(cnt);
        (cnt == 0).ifTrue: {
        	system.println(i);
        	signalEndOfBenchmark();
        }
        ifFalse: { nextActor<-next(cnt - 1)}
      };
      
      def setNext(actor) {
        nextActor := actor
      };
    };
    
    act<-setNext(prev);
    (prev == nil).ifTrue: { first := act };
    prev := act;
  };
  
  first<-setNext(prev);
  prev
};

createRing(numThreads)<-next(numPasses)